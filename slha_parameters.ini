[options]
cleanOutFolders = True ; If True, will remove auxiliary output folders (such as MG5 output)
runMG = True ; Option to skip running MadGraph. Should only be set to False if an existing LHE file will be used as the inputFile in slhaCreator
runSlhaCreator = True ; Options to skip the creation and writing of the SLHA file. Should be set to True, except for debugging.
ncpu = -1 ; Number of CPUs to run jobs (multiple parameters are chosen). Negative number means all machine cpus
computeWidths = all --body_decay=2 ;Define options for computing the widths with MadGraph through the command compute_widths <computeWidhts>. If not defined, None, False or empty, will skip the width calculation.
computeXsecsFor = [8880001, 8880002]  ; List of all PDGS to which compute xsecs for. All combinations of final states will be generated (whenever allowed), including the corresponding anti-particles. Only revelant if MadGraphPars:proccard is not defined.
modelFolder = UFO_LittleHiggs ; Path to the folder containing the UFO files.
[MadGraphPars]
#MG5 Cards:
paramcard = inputCards/param_card-littleHiggs.dat ; Path to the default parameter_card.dat to be used by MadGraph. Note that the parameter values defined in the MadGraphSet section below will automatically overwrite the values in paramcard. If not defined, the default file for the model will be used.
runcard = inputCards/run_card.dat ; Path to the default run_card.dat to be used by MadGraph. Note that the parameter values defined in the MadGraphSet section below will automatically overwrite the values in runcard. If not defined, the default file for the model will be used.
#proccard = inputCards/proc_card.dat ; Path to the default proc_card.dat to be used by MadGraph. If not defined, a process card will be automatically created using for computing the cross-section and decays according to the options set in [options]. 
processFolder = outputDir/MG5_output/proc-littleHiggs ;Path to the folder to store the process generation output. If it already exists, the process generation will be skipped, reducing the running time.
MG5path = MG5 ;Path to the MadGraph5 folder
mg5out = "outputDir/MG5_output/MHd_%.1f_%iTeV" %(${MadGraphSet:MHd},int((${MadGraphSet:ebeam1}+${MadGraphSet:ebeam2})/1000.)) ;Temporary output folder to store MadGraph output. It will be removed at the end of the run if cleanOutFolders = True. Note that parameter inter-dependence can be specified using the syntax ${section:prameter}. If the section is the same as current, it can be omitted. Any pyton expression can be used and will try to be evaluated using the corresponding parameter values.
ncores = 1 ; Number of cores to run MadGraph (specified through the command --multicore --nb-cores=<ncores>)
#List of model parameters. Only values in this section are allowed as lists (for loops)
[MadGraphSet]
ebeam1 = $loop{[4000,6500]} ; Sets the beam energy. The $loop{list} syntax will create an SLHA file for each value in the list. If several parameters are set as $loop{list}, SLHA files will be generated for all possible combinations of parameters.
ebeam2 = ${ebeam1}
MHd = $loop{[1000.,2000.]}  ; Sets the model parameter value (can be any parameter appearing in the UFO model and should follow the same naming convention). In this example 4 SLHA files will be created: MHd_1000_8TeV, MHd_1000_13TeV, MHd_2000_8TeV and MHd_2000_13TeV
[slhaCreator]
slhaout = "MHd_%.1f_%iTeV.slha" %(${MadGraphSet:MHd},int((${MadGraphSet:ebeam1}+${MadGraphSet:ebeam2})/1000.)) ;Name of output SLHA file. Note that for loop over parameters one must be careful to define distinct names for any set of parameters.
inputFile = "${MadGraphPars:mg5out}/Events/run_01/unweighted_events.lhe.gz" ;Name of the LHE file to be used to generate the SLHA file. It should correspond to the same MadGraph folder set in [MadGraphPars][mg5out]
